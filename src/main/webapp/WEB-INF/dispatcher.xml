<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
      http://www.springframework.org/schema/task
      http://www.springframework.org/schema/task/spring-task-3.0.xsd
      http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
      
	<!-- Controll AOP下面这2个配置一定要有，不然AOP不起作用 -->
	<context:component-scan base-package="org.trc" />
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- <bean id="methodInterceptorUtil" class="com.hoo.interceptor.MethodInterceptorUtil"/>
	
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">    
        <property name="beanNames">    
        	<list>
		       <value>*Facade</value>
		    </list>
        </property>    
        <property name="interceptorNames">    
            <list>   
            	<value>methodInterceptorUtil</value> 
            </list>    
        </property>    
    </bean> -->
	
	
	<!-- annotation默认的方法映射适配器 -->
	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
	    <property name="messageConverters">  
	        	<list>
					<ref bean="mappingJacksonHttpMessageConverter"/> 
				</list>
	    </property>  
	</bean>
		
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	    <property name="supportedMediaTypes">  
	        <list>  
	            <value>text/html;charset=UTF-8</value>  
	        </list>  
	    </property>  
	</bean>

	<!-- 配置velocity引擎 -->
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/templates/" /><!-- 模板存放的路径 -->
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="velocimacro.library">default_macros.html</prop> <!-- 页面默认加载的全局宏定义文件 -->
			</props>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".html" />
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" /> <!-- 配置velocity使用的java工具类 -->
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="layoutUrl" value="layout/layout.html" />
		<property name="requestContextAttribute" value="ac" />
		<property name="order" value="1" />
		<property name="numberToolAttribute" value="numbertool" />
		<property name="dateToolAttribute" value="datetool" />
	</bean>


	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/" />
			<mvc:mapping path="/system/**" />
			<!-- 拦截订单操作权限请求 -->
			<!-- <mvc:mapping path="/pageHandle/**" /> -->
			<!-- 拦截系统管理权限请求 -->
			<!-- <mvc:mapping path="/hospital/**" /> -->
			<!--  拦截业务查询请求 -->
			<!-- <mvc:mapping path="/page/**" /> -->
			<bean class="org.trc.aop.CommonInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

</beans>